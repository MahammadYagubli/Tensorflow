import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
df=pd.read_csv('kc_house_data.csv')
df['month']= pd.DatetimeIndex(df['date']).month
df['year']= pd.DatetimeIndex(df['date']).year
df=df.drop( 'date', axis=1)
df=df.drop( 'id', axis=1)
df=df.drop(['lat','long'], axis=1)
df.columns
df[ ['year', 'month']]
df['sqft_above'].fillna(df['sqft_above'].mean(), inplace=True)
df.isna().sum()
df=df.drop('zipcode',axis=1)
df['sqft_basement'].unique()
#sns.scatterplot(data=df, x='long', y='lat', hue='price')
x=df.drop('price', axis=1).values
y=df['price'].values
from tensorflow.keras.callbacks import EarlyStopping
early_stop=EarlyStopping(patience=10)
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(  x, y, test_size=0.3, random_state=101)
from sklearn.preprocessing import MinMaxScaler
scaler=MinMaxScaler()
X_train=scaler.fit_transform(X_train)
X_test=scaler.transform(X_test)
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

model=Sequential()
model.add(Dense(38, activation='relu'   )  )
model.add(Dense(38, activation='relu'   )  )
model.add(Dense(38, activation='relu'   )  )
model.add(Dense(38, activation='relu'   )  )

model.add(Dense(1))
#model.compile(optimizer='adam' , loss='mse' )
model.compile(optimizer='rmsprop' , loss='mse' )
#4 neirons
#print(r2_score(y_test, prediction))
#@0.7641693793979478
#8  neurons
#0.7604646519507606

model.fit(x=X_train, y=y_train, validation_data=(X_test, y_test), batch_size=128, epochs=400, callbacks=early_stop)   
loses=pd.DataFrame(model.history.history)
from sklearn.metrics import mean_squared_error, mean_absolute_error, explained_variance_score,classification_report, confusion_matrix, accuracy_score
prediction=model.predict(X_test)
from sklearn.metrics import accuracy_score, r2_score
print(r2_score(y_test, prediction))
print(r2_score(y_test, prediction))
