import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
import seaborn as sns
df=pd.read_csv('breast_cancer.csv')
df=df.drop('Unnamed: 32',1)
df['diagnosis'].value_counts()
df=df.drop('id', axis=1)
df['diagnosis']=df['diagnosis'].replace('B',1)
df['diagnosis']=df['diagnosis'].replace('M',0)
df['diagnosis'].value_counts()
sns.heatmap(df.corr())
sns.scatterplot(x='radius_mean', y='texture_mean', data=df)
X=df.drop('diagnosis', axis=1)
y=df['diagnosis'] 
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(   X, y, test_size=0.5, random_state=101)
from sklearn.preprocessing import MinMaxScaler
scaler=MinMaxScaler()
X_train=scaler.fit_transform(X_train)
X_test=scaler.transform(X_test)
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout,Conv2D, MaxPool2D, Flatten
from tensorflow.keras.callbacks import EarlyStopping
model=Sequential()
model.add(Dense(30, activation='relu'))
model.add(Dense(15, activation='relu'))
model.add(Dense(1, activation='sigmoid'))
model.compile(loss='binary_crossentropy', optimizer='Adam', metrics=['accuracy'])
early_stop=EarlyStopping(monitor='val_loss', patience=2)


model.fit(X_train, y_train, epochs=15, validation_data=(X_test, y_test),
          
             callbacks=early_stop
             )

hstr=pd.DataFrame(model.history.history)
hstr.plot()
hstr[['accuracy','val_accuracy']].plot()
from sklearn.metrics import  classification_report, confusion_matrix
predict=model.predict(X_test)
y_pred = np.round(predict).astype(int)
confusion_matrix(y_pred, y_test)
sns.heatmap(confusion_matrix(y_pred, y_test))
classification_report(y_pred, y_test)
