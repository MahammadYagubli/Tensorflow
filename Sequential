import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline
df=pd.read_csv('kc_house_data.csv')
#df.isnull().sum()
#chet how much data is missisng
df.describe().transpose()
#how to see histogram of the Price
plt.figure(figsize=(10,6))
sns.distplot(df['price'])
#to check how many bedrooms we have 
sns.countplot(df['bedrooms'])
#inscatter to seee price change related to area of teh house
plt.figure(figsize=(10,6))
sns.scatterplot(x='price', y='sqft_living', data=df)
#in boxplot to know price range related to bedroom Size
plt.figure(figsize=(10,6))
sns.boxplot(x='bedrooms', y='price', data=df)
#to get to know the first 1 percent of the high prices
df.sort_values('price', ascending=False).head(20)
#get rid of the first 1 % off data to get more clear values
non_top_1_pewrc=df.sort_values('price', ascending=False).iloc[216:]
#Seing more clearly the price comparisoon related to latitute and longtitue
sns.scatterplot(x='long', y='lat', data=non_top_1_pewrc, hue='price', palette='RdYlGn', edgecolor=None, alpha=0.2)
#check the comparisment of the price of houses
sns.boxplot(x='waterfront', y='price', data=df)
df=df.drop('id', axis=1)
df['date']=pd.to_datetime(df['date'])
df['year']= df['date'].apply(lambda date: date.year) 
df['month']=df['date'].apply(lambda date: date.month)
sns.boxplot(x='month', y='price', data=df)
df.groupby('year').mean()['price'].plot()
df.groupby('year').mean()['price'].plot()
df=df.drop('date', axis=1)
df=df.drop('zipcode', axis=1)
df['sqft_above'].fillna(df['sqft_above'].mean())
df['sqft_above'].isnull().sum()
df['sqft_above']=df['sqft_above'].fillna(df['sqft_above'].mean())
df['sqft_above'].isnull().sum()
X=df.drop('price', axis=1).values
y=df['price'].values
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)
from sklearn.preprocessing import MinMaxScaler
scaler=MinMaxScaler()
X_train=scaler.fit_transform(X_train)
X_test=scaler.transform(X_test)
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
model=Sequential()
model.add(Dense(19, activation='relu'))
model.add(Dense(19, activation='relu'))
model.add(Dense(19, activation='relu'))
model.add(Dense(19, activation='relu'))
model.add(Dense(1))
model.compile(optimizer='adam',loss='mse')
model.fit(x=X_train, y=y_train, validation_data=(X_test, y_test), batch_size=128, epochs=400)   
loses=pd.DataFrame(model.history.history)
loses.plot()
from sklearn.metrics import mean_squared_error, mean_absolute_error, explained_variance_score
prediction=model.predict(X_test)
mean_squared_error(y_test, prediction)
mean_absolute_error(y_test, prediction)
df['price'].describe()
explained_variance_score(y_test, prediction)
plt.figure(figsize=(10,6))
plt.scatter(y_test, predictiondf)
plt.plot(y_test, y_test, 'r')
single_house=df.drop('price', axis=1).iloc[0]
single_house.values.reshape(-1,19)
single_house=scaler.transform(single_house.values.reshape(-1,19))
single_house
model.predict(single_house)
df.head(1)
